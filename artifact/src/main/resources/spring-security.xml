<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- 此目录下不需要过滤 -->
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.png" security="none" />
	<!-- 基于Session Cookie的权限验证 -->
	<http pattern="/api/**" entry-point-ref="authenticationEntryPointImpl">
		<csrf request-matcher-ref="requiresCsrfMatcher" token-repository-ref="httpSessionCsrfTokenRepository" />
		<access-denied-handler ref="accessDeniedHandlerImpl" />
		<custom-filter ref="securityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		<!-- <session-management invalid-session-url="/security/invalid-session.jsp">此处需要覆写UserDetails实现类的equals和hashCode方法 <concurrency-control max-sessions="1" expired-url="/security/expired-session.jsp" /> </session-management> -->
	</http>
	<http pattern="/druid/**" entry-point-ref="authenticationEntryPointImpl">
		<csrf disabled="true" />
		<headers>
			<content-type-options disabled="true" />
			<frame-options disabled="true" />
			<cache-control disabled="true" />
			<xss-protection disabled="true" />
		</headers>
		<access-denied-handler ref="accessDeniedHandlerImpl" />
		<custom-filter ref="securityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	<http pattern="/login" entry-point-ref="authenticationEntryPointImpl">
		<csrf request-matcher-ref="requiresCsrfMatcher" token-repository-ref="httpSessionCsrfTokenRepository" />
		<access-denied-handler ref="accessDeniedHandlerImpl" />
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
	</http>
	<http pattern="/logout" entry-point-ref="authenticationEntryPointImpl">
		<csrf request-matcher-ref="requiresCsrfMatcher" token-repository-ref="httpSessionCsrfTokenRepository" />
		<access-denied-handler ref="accessDeniedHandlerImpl" />
		<logout success-handler-ref="logoutSuccessHandlerImpl" />
	</http>
	<!-- 登陆拦截器 -->
	<beans:bean name="loginFilter" class="org.artifact.security.intercept.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManagerImpl" />
		<beans:property name="authenticationSuccessHandler" ref="loginSuccessHandlerImpl" />
		<beans:property name="authenticationFailureHandler" ref="loginFailureHandlerImpl" />
	</beans:bean>

	<!-- 权限验证 -->
	<beans:bean name="securityInterceptor" class="org.artifact.security.intercept.SecurityInterceptor">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="authenticationManagerImpl" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="accessDecisionManagerImpl" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="securityMetadataSourceImpl" />
	</beans:bean>

	<authentication-manager id="authenticationManagerImpl">
		<authentication-provider user-service-ref="userDetailsServiceImpl">
			<password-encoder hash="bcrypt" /><!-- 加密策略，貌似当自定义FORM_LOGIN_FILTER时才会生效 -->
		</authentication-provider>
	</authentication-manager>

	<!-- CSRF -->
	<!-- 修复CsrfToken只生成没有存储到Session中问题 -->
	<beans:bean name="httpSessionCsrfTokenRepository" class="org.artifact.security.intercept.HttpSessionCsrfTokenRepository">
		<beans:property name="sessionAttributeName" value="CSRF_TOKEN"></beans:property>
	</beans:bean>
	<!-- 指定部分URL不做Csrf验证 -->
	<beans:bean name="requiresCsrfMatcher" class="org.artifact.security.intercept.RequiresCsrfMatcher">
		<beans:property name="ignoreUrlList">
			<beans:list>
				<beans:value>/login</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>


</beans:beans>