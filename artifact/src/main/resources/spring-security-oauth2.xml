<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.0.xsd http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!--<debug/> -->

	<!--static url pattern -->
	<!--<http pattern="/resources/**" security="none"/> -->


	<!-- Oauth server start............. https://github.com/spring-projects/spring-security-oauth/blob/master/docs/oauth2.md -->

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<http pattern="/oauth/token" authentication-manager-ref="oauth2AuthenticationManager" entry-point-ref="oauth2AuthenticationEntryPoint">
		<csrf disabled="true" />
		<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>

	<!--api http configuration -->
	<http pattern="/api/**" entry-point-ref="oauth2AuthenticationEntryPoint" access-decision-manager-ref="oauth2AccessDecisionManager">

		<csrf disabled="true" />
		<custom-filter ref="apiResourceServer" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>

	<beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="oauth2AuthenticationManager" />
	</beans:bean>

	<!--api resource server filter -->
	<oauth2:resource-server id="apiResourceServer" resource-id="api-resource" token-services-ref="tokenServices" />

	<beans:bean id="clientDetailsService" class="org.artifact.security.intercept.oauth2.CustomJdbcClientDetailsService">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>


	<!--Config token services -->
	<!--<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/> -->
	<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>

	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="clientDetailsService" ref="clientDetailsService" />
		<beans:property name="supportRefreshToken" value="true" />
	</beans:bean>

	<!--<global-method-security pre-post-annotations="enabled" proxy-target-class="true"> -->
	<!--<expression-handler ref="oauth2ExpressionHandler"/> -->
	<!--</global-method-security> -->

	<!--<oauth2:expression-handler id="oauth2ExpressionHandler"/> -->
	<!--<oauth2:web-expression-handler id="oauth2WebExpressionHandler"/> -->

	<beans:bean id="oauthUserApprovalHandler" class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler">
	</beans:bean>


	<beans:bean id="jdbcAuthorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>


	<oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices" user-approval-handler-ref="oauthUserApprovalHandler" user-approval-page="oauth_approval" error-page="oauth_error">
		<oauth2:authorization-code authorization-code-services-ref="jdbcAuthorizationCodeServices" />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>


	<beans:bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />


	<beans:bean id="oauth2ClientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetailsService" />
	</beans:bean>

	<authentication-manager id="oauth2AuthenticationManager">
		<authentication-provider user-service-ref="oauth2ClientDetailsUserService" />
	</authentication-manager>

	<beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean id="oauth2AccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />


	<http authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>  
		<form-login authentication-failure-url="/login.jsp?authentication_error=1" default-target-url="/index.jsp" login-page="/login.jsp" login-processing-url="/login.do" />
		<logout logout-success-url="/index.jsp" logout-url="/logout.do" />
		<anonymous />
	</http>


	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsServiceImpl">
			<password-encoder hash="bcrypt" /><!-- 加密策略，貌似当自定义FORM_LOGIN_FILTER时才会生效 -->
		</authentication-provider>
	</authentication-manager>


	<!-- Oauth server end............. -->


</beans:beans>